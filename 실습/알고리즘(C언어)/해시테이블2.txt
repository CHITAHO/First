#include<stdio.h>

#include<stdlib.h>



int *hashTable, M;



int h(int x, int M) {

	return x % M;

}



int getNextBucket(int v, int i) {

	return (v + i) % M;

}





void insertItem(int x) {

	int v = h(x, M), i = 0, b;

	while (i < M) {

		b = getNextBucket(v, i);

		if (hashTable[b] == 0) {

			hashTable[b] = x;

			for (int j = 0; j < i; j++) {

				printf("C");

			}

			printf("%d\n", b);

			return;

		}                                                                                                                                                                                                                                                                                                                                                                                                    

		else {

			i = i + 1;

		}

	}

}



void searchItem(int x) {

	int v = h(x, M), i = 0, b;

	while (i < M) {

		b = getNextBucket(v, i);

		if (hashTable[b] == 0) {

			printf("-1\n");

			return;

		}

		else if (hashTable[b] == x) {

			printf("%d %d\n", b, hashTable[b]);

			return;

		}

		else {

			i = i + 1;

		}

	}

	printf("-1\n");

}



void main() {

	int n, key;

	char select;

	scanf("%d", &M);

	hashTable = (int*)malloc(sizeof(int)*M);

	for (int i = 0; i < M; i++) {

		*(hashTable + i) = 0;

	}

	scanf("%d", &n);

	while (1) {

		scanf("%c", &select);

		if (select == 'i') {

			scanf("%d", &key);

			insertItem(key);

			getchar();

		}

		else if (select == 's') {

			scanf("%d", &key);

			searchItem(key);

		}

		else if (select == 'e') {

			break;

		}

	}

	free(hashTable);

}