#include<stdio.h>

#include<stdlib.h>



int H[100], n = 0;



void upHeap(int i) {

	int temp;

	if (i == 1) {

		return;

	}

	if (H[i] <= H[i / 2]) {

		return;

	}

	temp = H[i];

	H[i] = H[i / 2];

	H[i / 2] = temp;

	upHeap(i / 2);

}



void downHeap(int i) {

	int bigger, temp;

	if ((n < (i * 2)) && (n < (i * 2 + 1))) {

		return;

	}

	bigger = i * 2;

	if (n >= i * 2 + 1) {

		if (H[i * 2 + 1] > H[bigger]) {

			bigger = i * 2 + 1;

		}

	}

	if (H[i] >= H[bigger]) {

		return;

	}

	temp = H[i];

	H[i] = H[bigger];

	H[bigger] = temp;

	downHeap(bigger);

}



// 힙생성 - 재귀버전

void rBuildHeap(int i) {

	if (i > n) {

		return;

	}

	rBuildHeap(2 * i);

	rBuildHeap(2 * i + 1);

	downHeap(i);

}



// 힙생성 - 비재귀버전

void buildHeap() {

	for (int i = n / 2; i >= 1; i--) {

		downHeap(i);

	}

}



void printHeap() {

	for (int i = 1; i < n + 1; i++) {

		printf(" %d", H[i]);

	}

	printf("\n");

}



void main() {

	int keyNumber, value, i;

	scanf("%d", &keyNumber);

	for (i = 1; i < keyNumber + 1; i++) {

		scanf("%d", &value);

		H[i] = value;

		n++;

	}

	rBuildHeap(1);

	// buildHeap();

	printHeap();

}