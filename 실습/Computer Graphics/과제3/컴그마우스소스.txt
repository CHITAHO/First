#include "gl/glut.h"
#include<stdio.h>
double  R=1.0f, G=1.0f, B=1.0f;
int mouseCurPosotionX, mouseCurPositionY,mouseCurButton;
void mydisplay() {
    glClear(GL_COLOR_BUFFER_BIT);
    glBegin(GL_POLYGON);
    glColor3f(R, G, B);
    glVertex2f(0.00f, 0.5f);
    glVertex2f(-0.5f, 0.5f);
    glVertex2f(-0.5f, 0.1f);
    glVertex2f(0.0f, 0.1f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3f(R, G, B);
    glVertex2f(0.6f, 0.5f);
    glVertex2f(0.1f, 0.5f);
    glVertex2f(0.1f, -0.5f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3f(R, G, B);
    glVertex2f(-0.1f, -0.1f);
    glVertex2f(-0.25f, 0.0f);
    glVertex2f(-0.4f, -0.1f);
    glVertex2f(-0.4f, -0.4f);
    glVertex2f(-0.1f, -0.4f);
    glEnd();
    glFlush();
}
void init() {
    glClearColor(1.0f, 1.0f, 0.0f, 0.0f);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();

    gluOrtho2D(-1.0, 1.0, -1.0, 1.0);
}
/*void mouseStatus(int button, int state, int x, int y) {
    if (x < 250) {
        if (button == GLUT_LEFT_BUTTON)
        {
            R = 0.0f, G = 0.0f, B = 1.0f;
        }
    }
    else
    if (button == GLUT_LEFT_BUTTON)
    {
        R = 1.0f, G = 0.0f, B = 0.0f;
    }
    mouseCurPosotionX = x;
    mouseCurPositionY = y;
    mouseCurButton = button;
    glutPostRedisplay();
}
*/
void mouseMotion(int x, int y)
{
    
    if (mouseCurButton == GLUT_LEFT_BUTTON) {
        if (x < mouseCurPosotionX)
        {
            R = 0.0f, G = 0.0f, B = 1.0f;
        }
        if (x > mouseCurPosotionX) {
            R = 1.0f, G = 0.0f, B = 0.0f;
        }
    }
    mouseCurPosotionX = x;
    mouseCurPositionY = y;
    
    glutPostRedisplay();
}
    int main(int argc, char** argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(500, 500);
    glutInitWindowPosition(0, 0);
    glutCreateWindow("15012974 최태호");
    glutDisplayFunc(mydisplay); 
    init();
    //glutMouseFunc(mouseStatus);
    glutMotionFunc(mouseMotion);
    glutMainLoop();
    return 0;
}