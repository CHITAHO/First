#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#pragma warning(disable:4996)
#define MAX_NUM 100

typedef struct tel { //구조체
	char name[21];
	char phone[16];
	char birth[9];
}TEL;

void swap(TEL* a, TEL* b) //swap 함수
{
	TEL tmp;
	tmp = *a;
	*a = *b;
	*b = tmp;
}
void sort(int n, TEL* tel_lists) //정렬 
{
	TEL* p, * q;

	for (p = tel_lists; p < tel_lists + n; p++)
	{
		for (q = tel_lists + n - 1; q > p; q--)
		{
			if (strcmp(q->name, (q - 1)->name) < 0)
			{
				swap(q, q - 1);
			}
		}
	}
}
int input(char* str, int remit)//입력에 에러 있으면 1, 없으면 0
{
	char* p;
	gets(str);
	if (*(str + remit) != 0)
	{
		printf("OVERFLOW\n");
		return 1;
	}
	return 0;
}
int regist(int n, TEL* tel_lists) //등록
{
	TEL* p = tel_lists + n; 
	char name[21] = { 0 }, phone[16] = { 0 }, birth[9] = { 0 }; //선언 및 초기화

	printf("Name:");
	if (input(p->name, 20)) //입력
		return;
	printf("Phone_number:");
	if (input(p->phone, 15)) //입력
		return;
	printf("Birth:");
	if (input(p->birth, 8)) //입력
		return;

	n++; //카운트 증가
	sort(n, tel_lists); //정렬
	printf("<<%d>>\n", n); //카운트 출력
	return n;
}
void showAll(int n, TEL* tel_lists) // 모두 출력
{
	TEL* p;
	for (p = tel_lists; p < tel_lists + n; p++)
		printf("%s %s %s\n", p->name, p->phone, p->birth);
}
int del(int n, TEL* tel_lists) //삭제
{
	char query[21] = { 0 };
	TEL* p;
	int flag = 1;

	if (n == 0) //정보 없으면
	{
		printf("NO MEMBER\n");
		return 0;
	}

	printf("Name:");
	gets(query); //삭제할 이름 입력

	for (p = tel_lists; p < tel_lists + n; p++)
		if (!strcmp(query, p->name)) //같으면 플래그 0
		{
			flag = 0;
			break;
		}

	if (flag) //플래그
	{
		printf("NO MEMBER\n");
		return n;
	}

	for (p; p < tel_lists + n - 1; p++)
		swap(p, p + 1);
	n = n - 1; //카운트 감소
	return n;
}
void find(int n, TEL* tel_lists)
{
	char query[3] = { 0 };
	int q, c;
	TEL* p;

	printf("Birth:");
	gets(query); 

	q = atoi(query);

	for (p = tel_lists; p < tel_lists + n; p++)
	{
		query[0] = p->birth[4];
		query[1] = p->birth[5];

		c = atoi(query);

		if (q == c)
			printf("%s %s %s\n", p->name, p->phone, p->birth);
	}
}


int main()
{
	TEL tel_lists[MAX_NUM] = { 0 }; //최대크기 100 구조체 

	int c;
	int n = 0; //카운트변수
	TEL* p;
	while (1)
	{
		printf("*****Menu*****\n");
		printf("<1.Registration><2.ShowAll><3.Delete><4.FindByBirth><5.Exit>\n");
		printf("Enter_the_menu_number:");
		scanf("%d", &c);
		getchar();

		if (c == 1)//Registration
			n = regist(n, tel_lists);
		if (c == 2)//show all
			showAll(n, tel_lists);
		if (c == 3)//delete
			n = del(n, tel_lists);
		if (c == 4)//Find By Birth
			find(n, tel_lists);
		if (c == 5)//Exit
			return;
	}

	return 0;
}